redis 用作分布式锁：

Q1：为什么会用redis当做分布式锁;分布式锁的应用场景？

分布式锁的应用场景：在分布式系统中，如果要修改一个用户的状态，首先要先获取状态，在进行更新。如何保证这一系列操作的原子性呢？

redis 可以是使用setnx（set if not exist）指令，运行客户占有锁，通过del指令来释放锁。
*但是其中的问题是，如果在执行逻辑中出现了异常，可能导致del没有调用，就会陷入死锁状态，锁永远得不到释放。因此我们在拿到锁之后需要给所加一个过期时间（比如5s）。但是如果在过期时间中程序挂掉没有执行del指令怎么办？
此时会出现的问题：线程1执行任务超出了时间但是没有挂掉，此时线程2拿到锁，但此时线程1又将锁释放掉，因此线程3也拿到了锁，所以此时会有线程2，线程3同时在修改数据。  *为了解决这个问题：可以在set指令的value上面加一个随机数，释放锁的时候先匹配随机数是否一致在删除key。

*在redis集群中使用分布式锁仍会有问题：
如果主节点挂掉，从节点会取而代之，但是客户端并不会有感知。如果锁还没有及时同步到从节点，此时另一个客户端请求加锁的时候，就立即批准，会导致同一把锁被连个客户端锁拥有。
可以使用redlock解决这个问题：redlock在加锁的时候会向过半的节点发送set(key, value, nx=true, ex=xx)指令，只要过半的节点set成功，就认为加锁成功。释放锁的时候向所有的节点发送del指令。